if [ -r ~/.zshrc -a -r ~/.zshrc.global -a ! -r ~/.zshrc.local ] ; then
    printf '-!-\n'
    printf '-!- Looks like you are using the old zshrc layout of grml.\n'
    printf '-!- Please read the notes in the grml-zsh-refcard, being'
    printf '-!- available at: http://grml.org/zsh/\n'
    printf '-!-\n'
    printf '-!- If you just want to get rid of this warning message execute:\n'
    printf '-!-        touch ~/.zshrc.local\n'
    printf '-!-\n'
fi

## ignore ~/.ssh/known_hosts entries
alias insecssh='ssh -o "StrictHostKeyChecking=no" -o "UserKnownHostsFile=/dev/null" -o "PreferredAuthentications=keyboard-interactive"'

## global aliases (for those who like them) ##

#alias -g '...'='../..'
#alias -g '....'='../../..'
#alias -g BG='& exit'
#alias -g C='|wc -l'
#alias -g G='|grep'
#alias -g H='|head'
#alias -g Hl=' --help |& less -r'
#alias -g K='|keep'
alias -g L='|less'
alias -g LL='|& less -r'
#alias -g M='|most'
#alias -g N='&>/dev/null'
#alias -g R='| tr A-z N-za-m'
#alias -g SL='| sort | less'
#alias -g S='| sort'
#alias -g T='|tail'
#alias -g V='| vim -'

# Personal settings for CH
export PATH=$PATH:$HOME/bin:$HOME/.local/bin
export MAIL=$HOME/Mail/inbox/`date +"%y%m"`

hash -d dev=$HOME/devel
hash -d dok=$HOME/Dokumente
alias -g yi="sudo dnf install -y"
alias -g yu="sudo dnf update"
alias -g ys="dnf search"

## Aliases
alias ls="ls --color=auto"
alias targx="tar -zxvf"
alias targc="tar -cxvf"
alias tarbx="tar --bzip2 -xvf"
alias tarbc="tar --bzip2 -cvf"
alias llh="ls --color=auto -altrh"
alias sshnoch="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

# }}}

[ -x /usr/bin/dircolors ] && eval `dircolors $HOME/.dir_colors`

# Helpers
alias inc_deb_ver='dch --force-distribution -D stable -p --distributor RANDOM --no-auto-nmu -i'

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

# Include workplace zshrc for settings different then
[ -f $HOME/.zshrc.local.workplace ] && source "$HOME/.zshrc.local.workplace"

# Start keychain
[ -x /usr/bin/keychain ] && eval `keychain --eval id_rsa`
